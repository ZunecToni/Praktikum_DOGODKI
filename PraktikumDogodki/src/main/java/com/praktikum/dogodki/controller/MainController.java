package com.praktikum.dogodki.controller;

import java.sql.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

//import com.praktikum.dogodki.baza.DogodekRepository;
//import com.praktikum.dogodki.baza.Dogodki;

public class MainController {


    @RequestMapping(value = { "/", "/index" }, method = RequestMethod.GET)
    public String index(Model model) {
 
 
        return "index";
    }

    @RequestMapping(value = { "/addDogodek" }, method = RequestMethod.GET)
    public String addDogodek(Model model) {
    	
    	
 
 
        return "addDogodek";
    }
	
//	@Controller    // This means that this class is a Controller
//	@RequestMapping(path="/index") // This means URL's start with /demo (after Application path)
//	public class MainController {
//		@Autowired // This means to get the bean called userRepository
//		           // Which is auto-generated by Spring, we will use it to handle the data
//		private DogodekRepository DogodekRepository;
//
//		@GetMapping(path="/Dodajdogodek") // Map ONLY GET Requests
//		public @ResponseBody String addNewUser (String naziv, String opis, String lokacija, Date zacetek, Date trajanje, Date konecPrijav,
//				Date konecOdjav, int minOseb, int maxOseb, String status, boolean potrebnoPovabilo) {
//			// @ResponseBody means the returned String is the response, not a view name
//			// @RequestParam means it is a parameter from the GET or POST request
//
//			Dogodki n = new Dogodki();
//			
//			
////			n.setName(name);
////			n.setEmail(email);
//			
//			n.setNaziv(naziv);
//			n.setOpis(opis);
//			n.setLokacija(lokacija);
//			n.setZacetek(zacetek);
//			n.setTrajanje(trajanje);
//			n.setKonecPrijav(konecPrijav);
//			n.setKonecOdjav(konecOdjav);
//			n.setMinOseb(minOseb);
//			n.setMaxOseb(maxOseb);
//			n.setStatus(status);
//			n.setPotrebnoPovabilo(potrebnoPovabilo);
//			
//			
//			
//		//	DogodekRepository.save(n);
//			return "Saved";
//		}
//
////		@GetMapping(path="/all")
////		public @ResponseBody Iterable<Dogodki> getAllUsers() {
////			// This returns a JSON or XML with the users
////			return DogodekRepository.findAll();
////		}

}
